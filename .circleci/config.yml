# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: us.gcr.io/sadc-trinity/trinity-circle-builds:1.1.1
        auth :
          username: _json_key
          password: $GCP_KEY

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache: 
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          - v1-dependencies-

      #build 
      - run: 
          name: Build jar
          command:
            mvn package

      - persist_to_workspace:
          root: /root/repo
          paths: target/

  test:
    docker:
    # specify the version you desire here
    - image: us.gcr.io/sadc-trinity/trinity-circle-builds:1.1.1
      auth :
        username: _json_key
        password: $GCP_KEY

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache: 
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}      

      - run:
          name: Running unit tests
          command: 
            mvn test

  deploy:
    docker:
      # specify the version you desire here
      - image: us.gcr.io/sadc-trinity/trinity-circle-builds:1.1.1
        auth :
          username: _json_key
          password: $GCP_KEY

    steps:
      - attach_workspace:
          at: /root/repo

      - run:
          name: Authenticate to GCP
          command:
            echo "$GCP_KEY" > "GCP_KEY.json";
            gcloud auth activate-service-account --key-file=GCP_KEY.json

      - run:
          name: Copy jar to bucket and install openssh
          command:
            file=$(ls /root/repo/target/javabackend* | head -1);
            gsutil cp $file gs://api-builds;
            apt-get --assume-yes update;
            apt-get --assume-yes install openssh-client;
            mkdir .ssh;
            echo "$SSH_KEY_PUBLIC" > ".ssh/google_compute_engine.pub";
            echo "$SSH_KEY" > ".ssh/google_compute_engine";
            ls -al;
            ls -al .ssh;
            echo $HOME;
            mkdir $HOME/.ssh;
            echo "$SSH_KEY_PUBLIC" > "$HOME/.ssh/google_compute_engine.pub";
            echo "$SSH_KEY" > "$HOME/.ssh/google_compute_engine";
            ssh-keyscan -H 34.73.221.154 >> .ssh/known_hosts;
      
      - add_ssh_keys:
          fingerprints:
            - "32:8c:f2:f4:c8:0c:1f:be:64:47:fa:2b:bc:26:9a:a7"
      
      - run:
          name: Copy jar to vm
          command:
            file=$(ls /root/repo/target/javabackend* | head -1);
            gcloud compute scp $file root@34.73.221.154:/app/api/; 
      


workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
